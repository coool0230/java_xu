String
---------------------
	1.final java.lang.String
	2.String str = "";
		str = str + "";
	3.
	
	
char
-----------------------------
	1.c = 234;
		c = ' ';
		

十进制转换成16进制
-------------------------------------
	0 - f : 0000  - 1111 {0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f}
	1100   0011   1010   0101
	c          3      a         5
	char[]  arr = {0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f};
	

String
----------------------------------
	1.常量,imutable不可变的
	2.字符串池中
	3."abc" + "def"
	4.字符有编码,Charset,
	5.IDE下的默认字符集设置,项目的编码就是,和字符集是一个概念
	6.字符集
		字符和数字的对照表
		GBK		  //GB2312加强版
		GB2312  //中文字符集,包含简体中文+asc码
		Big-5    //繁体字符集
		iso-8869-1      西欧码表
		utf-8 	国际化编码,可以表示任意文字
					big-5
		asci码 < GBK         < utf-8
					iso-8859-1
	7.字符在内存中存储都是unicode码
		c = '\u0098';
		c = "中";"
	8.编码转换的过程
		String str = "\u0099";
		String str = "a中b";
		str.getBytes();
	9.字符串编解码
		编码(encode):str --------> byte,str.getBytes("GBK");
		解码(decode):byte[] ---->String,new String(byte[],"UTF-8");
		
		

StringBuffer
-------------------------------------------------
	1.字符串缓冲区
	2.mutable,可变的
	3.java.lang.AbstractStringBuilder
				java.lang.StringBuffer继承自上面
	4.线程是安全的
	
	
StringBuilder
-----------------------------------------------
	1.字符串构建器
	2.mutable,可变的
	3.java.lang.AbstractStringBuilder
				java.lang.StringBuilder继承自上面
	4.不是线程安全的
	
	
builder模式
------------------------------------------
	1.java设计模式之一
	
基本类型与包装类的区别
--------------------------------------------
	1.基本类型(数值类型)有默认值0
	2.包装类默认值为null(成员变量时)
	3.基本类型无法表达null的概念
	4.基本类型不是对象
	5.包装类是对象
	6.基本类型可以直接参与运算
		int i = 7,j = 8; c = i + j;
	7.包装类是对象,不能直接参与运算
		Integer i0 = new Integer(13);
		Integer i1 = new Integer(12);
		c =  i0.intValue + i1.intValue
	
自动装箱
---------------------------
	将基本类型自动转换成包装类对象
	

自动拆箱
---------------------------------
	将包装类对象自动转换成基本类型
	
数组
-------------------------------
	1.元素类型必须相同
		基本类型和引用类型
	2.长度固定
	3.地址连续
	4.通过下标(索引)访问,以0 为基址
	5.null指针异常/索引越界异常
	6.数组只有属性,没有方法
	7.数组理想情况下 最大值 2的31次方 -1;
	
	
集合
---------------------------------------
	1.容器
	2.最大好处长度可变
	3.集合只能存放对象
	4.元素类型可以不同
	5.只有方法

List
-------------------------------------
	interface java.lang.Iterable
			/|\
			 |
			interface java.util.Collection
						/|\
						 |
						interface java.util.List
									/|\
									-------实现-----
									class  java.util.ArrayList
	2.list可以存放重复元素
	3.有序的
	4.ArrayList
		读取快
		写入慢 
		list.add();
		list.remove()
		list.size()
		list.clear()
		list.get()
		list.contains()
		list.isEmpty();
		list.indexOf();//  元素的索引
		list.lastIndexOf();   元素最后一次出现在列表中的位置
	5.LinkedList
		链表
		通过手拉手实现对象引用
		存储速度快,查询慢

String
--------------------------------------
	1. ==
		判断的是对象的内存地址,而不是对象的内容
	2.判断内容
		equals
		
equals
----------------------------------------
	1.判断对象的内容是否相等
	2.在java.lang.Object中定义的
	3.默认实现是判断对象地址是否相同
	4.需要重写该方法实现内容的判断
	 
	
Set
-----------------------------------------------------
		interface java.lang.Iterable
			/|\
			 |
			interface java.util.Collection
						/|\
						 |
						interface java.util.Set
						
	2.元素不能重复
	3.元素的存储是无序的

	
	
	
java基本类型
---------------------------------------
	0.包装类,warpper
		
	1.数字类型
		byte				Byte
		short				Short
		int					Integer
		long				Long
		float				Float
		double			Double
	2.boolean			Boolean
	3.char				Character
	
练习
-----------------------------------------------
	创建数组列表,存放1000个Peroson对象,name是tom0-tom999,age 0- 100;
	
	
作业
---------------------------------------------------
	1.取出整数的16进制表示形式  \u00ff
		int i = "胡"
		位运算
		
	2.取出整数的8进制表示形式
	3.使用韩语字符集实现字符串编解码实验
	4.对字符串进行倒序排列
	5.练习自动拆箱和装箱
	6.实现equals方法,比较四方面的要素
		Student{name,height,weight,age}
			重写equals 方法
	7.创建集合,存放10个Person对象,5个汽车对象,3个蜜蜂对象,
		迭代集合,输出每个对象的name属性
	8.操场上6个年纪,每个年纪有10个班,每个班有60人(String)
		把所有人放到集合里
		集合嵌套的问题
		tom-x年纪-y班-n号
		
	